name: Check for updates

on:
  schedule:
    - cron: '42 23 * * *'
  push:
    branches: [master]


env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.release-list.outputs.result }}

    steps:
      - name: List releases
        uses: actions/github-script@v7
        id: release-list
        with:
          script: |
            const { repo, owner } = context.repo;
            await github.request('PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable', {
              owner,
              repo,
              workflow_id: 'bump.yml',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            const aeron_releases = await github.request('GET /repos/{owner}/{repo}/releases', {
              owner: 'aeron-io',
              repo: 'aeron',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            const branches = await github.request('GET /repos/{owner}/{repo}/branches', {
              owner,
              repo,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            const aeron_release_tags = aeron_releases
              .data
              .map((release) => release.tag_name)
              .filter((tag) => {
                let v = tag.split('.', 3).map((d) => parseInt(d));
                return v[0] > 1
                  || (v[0] == 1 && v[1] > 47)
                  || (v[0] == 1 && v[1] == 47 && v[2] > 2)
              })
            const upgrade_branches = branches
              .data
              .map((branch) => branch['name'])
              .filter((name) => name.startsWith('upgrade-aeron-'))
              .map((name) => name.replace('upgrade-aeron-', ''))
            const diff = aeron_release_tags.filter((v) => !upgrade_branches.includes(v));
            return diff

      - name: Show result
        run: echo "${{ steps.release-list.outputs.result }}"

  create-pr:
    name: Create PR
    needs: check
    if: ${{ needs.check.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        value: ${{ fromJson(needs.check.outputs.matrix) }}

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Switch branch
        run: |
          git remote add -f upstream 'https://github.com/bspeice/libaeron-sys.git'
          git checkout -b 'upgrade-aeron-${{ matrix.value }}' upstream/master

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Bump version
        run: |
          ./update-version.sh "${{ matrix.value }}"

      - name: Commit
        run: |
          git config user.name "Alec Moskvin"
          git config user.email "code@netreq.com"
          git commit -m 'Upgrade to Aeron ${{ matrix.value }}'
          git push origin 'upgrade-aeron-${{ matrix.value }}'
          git log -1

      - name: Create pull request
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Upgrade to Aeron ${{ matrix.value }}',
              owner,
              repo,
              base: 'master',
              head: 'upgrade-aeron-${{ matrix.value }}',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
